// import * as R from 'ramda';

import phones from 'api/mockPhones';
import categories from 'api/mockCategories';

export const fetchPhones = async () => {
  // return await superagent.get('/api/phones')    // fetch, superagent ...
  return new Promise((resolve, reject) => {
    resolve(phones);
    // reject('error');
  });
};

export const loadMorePhones = async ({ offset }) => {
  // fetch.get(`http://google.com/api/phones?offset=${offset}`); // возможный запрос к реальному api
  return new Promise((resolve, reject) => {
    resolve(phones);
  });
};

export const fetchPhoneById = async id => {
  // fetch.get(`http://google.com/api/phones/${id}`); // возможный запрос к реальному api
  return new Promise((resolve, reject) => {
    // const phone = R.find(R.propEq('id', id), phones);
    const phone = phones.find(phone => phone.id === id);
    resolve(phone);
  });
};

export const fetchCategories = async () => {
  // return await superagent.get('/api/categories')    // fetch, superagent ...
  return new Promise((resolve, reject) => {
    resolve(categories);
  });
};
